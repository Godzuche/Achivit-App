package com.godzuche.achivitapp.core.design_system.theme

import androidx.compose.ui.graphics.Color

// Custom Colors
//Calm and Focused: Teal is calming and helps users stay focused,
// which is great for a productivity app.
val BrandColor = Color(0xFF008080)

val MOrange = Color(0xFFFFA500)
val MGreenBright = Color(0xFF52D726)

//Success and Completion: Green symbolizes growth, success, and completion,
// which fits well with the idea of managing and completing tasks.
val MGreen = Color(0xFF4CAF50)

//Trustworthy and Professional: Blue is often associated with trust,
// making it a popular choice for productivity apps.
//High Readability: Blue provides good contrast with white text, ensuring readability.
val MBlue = Color(0xFF1E88E5)

//Creativity and Focus: Purple combines the calm stability of blue
// and the energy of red, promoting creativity while maintaining focus.
val MPurple = Color(0xFF673AB7)

// Task Status
val NoneColor = Color.Transparent
val TodoColor = Color.Gray
val InProgressColor = MOrange
val RunningLateColor = Color.Red
val CompletedColor = MGreen


// Material3 Theme Colors

// Light Theme
val primaryLight = Color(0xFF006A6A)
val onPrimaryLight = Color(0xFFFFFFFF)
val primaryContainerLight = Color(0xFF9CF1F0)
val onPrimaryContainerLight = Color(0xFF002020)
val secondaryLight = Color(0xFF0B6780)
val onSecondaryLight = Color(0xFFFFFFFF)
val secondaryContainerLight = Color(0xFFB9EAFF)
val onSecondaryContainerLight = Color(0xFF001F29)
val tertiaryLight = Color(0xFF685F12)
val onTertiaryLight = Color(0xFFFFFFFF)
val tertiaryContainerLight = Color(0xFFF1E48A)
val onTertiaryContainerLight = Color(0xFF201C00)
val errorLight = Color(0xFFBA1A1A)
val onErrorLight = Color(0xFFFFFFFF)
val errorContainerLight = Color(0xFFFFDAD6)
val onErrorContainerLight = Color(0xFF410002)
val backgroundLight = Color(0xFFF4FBFA)
val onBackgroundLight = Color(0xFF161D1D)
val surfaceLight = Color(0xFFF5FAFD)
val onSurfaceLight = Color(0xFF171C1E)
val surfaceVariantLight = Color(0xFFDBE4E8)
val onSurfaceVariantLight = Color(0xFF40484B)
val outlineLight = Color(0xFF70787C)
val outlineVariantLight = Color(0xFFBFC8CC)
val scrimLight = Color(0xFF000000)
val inverseSurfaceLight = Color(0xFF2C3133)
val inverseOnSurfaceLight = Color(0xFFECF1F4)
val inversePrimaryLight = Color(0xFF80D5D4)
val surfaceDimLight = Color(0xFFD6DBDD)
val surfaceBrightLight = Color(0xFFF5FAFD)
val surfaceContainerLowestLight = Color(0xFFFFFFFF)
val surfaceContainerLowLight = Color(0xFFEFF4F7)
val surfaceContainerLight = Color(0xFFEAEFF1)
val surfaceContainerHighLight = Color(0xFFE4E9EB)
val surfaceContainerHighestLight = Color(0xFFDEE3E6)

// Light Theme Medium Contrast
val primaryLightMediumContrast = Color(0xFF004B4B)
val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
val primaryContainerLightMediumContrast = Color(0xFF238181)
val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val secondaryLightMediumContrast = Color(0xFF00495C)
val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
val secondaryContainerLightMediumContrast = Color(0xFF307D97)
val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryLightMediumContrast = Color(0xFF4B4400)
val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightMediumContrast = Color(0xFF7F7628)
val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val errorLightMediumContrast = Color(0xFF8C0009)
val onErrorLightMediumContrast = Color(0xFFFFFFFF)
val errorContainerLightMediumContrast = Color(0xFFDA342E)
val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
val backgroundLightMediumContrast = Color(0xFFF4FBFA)
val onBackgroundLightMediumContrast = Color(0xFF161D1D)
val surfaceLightMediumContrast = Color(0xFFF5FAFD)
val onSurfaceLightMediumContrast = Color(0xFF171C1E)
val surfaceVariantLightMediumContrast = Color(0xFFDBE4E8)
val onSurfaceVariantLightMediumContrast = Color(0xFF3C4448)
val outlineLightMediumContrast = Color(0xFF586064)
val outlineVariantLightMediumContrast = Color(0xFF737C80)
val scrimLightMediumContrast = Color(0xFF000000)
val inverseSurfaceLightMediumContrast = Color(0xFF2C3133)
val inverseOnSurfaceLightMediumContrast = Color(0xFFECF1F4)
val inversePrimaryLightMediumContrast = Color(0xFF80D5D4)
val surfaceDimLightMediumContrast = Color(0xFFD6DBDD)
val surfaceBrightLightMediumContrast = Color(0xFFF5FAFD)
val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightMediumContrast = Color(0xFFEFF4F7)
val surfaceContainerLightMediumContrast = Color(0xFFEAEFF1)
val surfaceContainerHighLightMediumContrast = Color(0xFFE4E9EB)
val surfaceContainerHighestLightMediumContrast = Color(0xFFDEE3E6)

// Light Theme High Contrast
val primaryLightHighContrast = Color(0xFF002727)
val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
val primaryContainerLightHighContrast = Color(0xFF004B4B)
val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
val secondaryLightHighContrast = Color(0xFF002631)
val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
val secondaryContainerLightHighContrast = Color(0xFF00495C)
val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
val tertiaryLightHighContrast = Color(0xFF272300)
val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightHighContrast = Color(0xFF4B4400)
val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
val errorLightHighContrast = Color(0xFF4E0002)
val onErrorLightHighContrast = Color(0xFFFFFFFF)
val errorContainerLightHighContrast = Color(0xFF8C0009)
val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
val backgroundLightHighContrast = Color(0xFFF4FBFA)
val onBackgroundLightHighContrast = Color(0xFF161D1D)
val surfaceLightHighContrast = Color(0xFFF5FAFD)
val onSurfaceLightHighContrast = Color(0xFF000000)
val surfaceVariantLightHighContrast = Color(0xFFDBE4E8)
val onSurfaceVariantLightHighContrast = Color(0xFF1D2528)
val outlineLightHighContrast = Color(0xFF3C4448)
val outlineVariantLightHighContrast = Color(0xFF3C4448)
val scrimLightHighContrast = Color(0xFF000000)
val inverseSurfaceLightHighContrast = Color(0xFF2C3133)
val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
val inversePrimaryLightHighContrast = Color(0xFFA6FBFA)
val surfaceDimLightHighContrast = Color(0xFFD6DBDD)
val surfaceBrightLightHighContrast = Color(0xFFF5FAFD)
val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightHighContrast = Color(0xFFEFF4F7)
val surfaceContainerLightHighContrast = Color(0xFFEAEFF1)
val surfaceContainerHighLightHighContrast = Color(0xFFE4E9EB)
val surfaceContainerHighestLightHighContrast = Color(0xFFDEE3E6)

// Dark Theme
val primaryDark = Color(0xFF80D5D4)
val onPrimaryDark = Color(0xFF003737)
val primaryContainerDark = Color(0xFF004F4F)
val onPrimaryContainerDark = Color(0xFF9CF1F0)
val secondaryDark = Color(0xFF89D0ED)
val onSecondaryDark = Color(0xFF003544)
val secondaryContainerDark = Color(0xFF004D62)
val onSecondaryContainerDark = Color(0xFFB9EAFF)
val tertiaryDark = Color(0xFFD4C871)
val onTertiaryDark = Color(0xFF363100)
val tertiaryContainerDark = Color(0xFF4F4800)
val onTertiaryContainerDark = Color(0xFFF1E48A)
val errorDark = Color(0xFFFFB4AB)
val onErrorDark = Color(0xFF690005)
val errorContainerDark = Color(0xFF93000A)
val onErrorContainerDark = Color(0xFFFFDAD6)
val backgroundDark = Color(0xFF0E1514)
val onBackgroundDark = Color(0xFFDDE4E3)
val surfaceDark = Color(0xFF0F1416)
val onSurfaceDark = Color(0xFFDEE3E6)
val surfaceVariantDark = Color(0xFF40484B)
val onSurfaceVariantDark = Color(0xFFBFC8CC)
val outlineDark = Color(0xFF899296)
val outlineVariantDark = Color(0xFF40484B)
val scrimDark = Color(0xFF000000)
val inverseSurfaceDark = Color(0xFFDEE3E6)
val inverseOnSurfaceDark = Color(0xFF2C3133)
val inversePrimaryDark = Color(0xFF006A6A)
val surfaceDimDark = Color(0xFF0F1416)
val surfaceBrightDark = Color(0xFF343A3C)
val surfaceContainerLowestDark = Color(0xFF0A0F11)
val surfaceContainerLowDark = Color(0xFF171C1E)
val surfaceContainerDark = Color(0xFF1B2023)
val surfaceContainerHighDark = Color(0xFF252B2D)
val surfaceContainerHighestDark = Color(0xFF303638)

// Dark Theme Medium Contrast
val primaryDarkMediumContrast = Color(0xFF84D9D8)
val onPrimaryDarkMediumContrast = Color(0xFF001A1A)
val primaryContainerDarkMediumContrast = Color(0xFF479E9D)
val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
val secondaryDarkMediumContrast = Color(0xFF8DD5F1)
val onSecondaryDarkMediumContrast = Color(0xFF001922)
val secondaryContainerDarkMediumContrast = Color(0xFF519AB5)
val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
val tertiaryDarkMediumContrast = Color(0xFFD9CD75)
val onTertiaryDarkMediumContrast = Color(0xFF1A1700)
val tertiaryContainerDarkMediumContrast = Color(0xFF9D9242)
val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
val errorDarkMediumContrast = Color(0xFFFFBAB1)
val onErrorDarkMediumContrast = Color(0xFF370001)
val errorContainerDarkMediumContrast = Color(0xFFFF5449)
val onErrorContainerDarkMediumContrast = Color(0xFF000000)
val backgroundDarkMediumContrast = Color(0xFF0E1514)
val onBackgroundDarkMediumContrast = Color(0xFFDDE4E3)
val surfaceDarkMediumContrast = Color(0xFF0F1416)
val onSurfaceDarkMediumContrast = Color(0xFFF6FBFE)
val surfaceVariantDarkMediumContrast = Color(0xFF40484B)
val onSurfaceVariantDarkMediumContrast = Color(0xFFC4CCD0)
val outlineDarkMediumContrast = Color(0xFF9CA4A8)
val outlineVariantDarkMediumContrast = Color(0xFF7C8488)
val scrimDarkMediumContrast = Color(0xFF000000)
val inverseSurfaceDarkMediumContrast = Color(0xFFDEE3E6)
val inverseOnSurfaceDarkMediumContrast = Color(0xFF252B2D)
val inversePrimaryDarkMediumContrast = Color(0xFF005151)
val surfaceDimDarkMediumContrast = Color(0xFF0F1416)
val surfaceBrightDarkMediumContrast = Color(0xFF343A3C)
val surfaceContainerLowestDarkMediumContrast = Color(0xFF0A0F11)
val surfaceContainerLowDarkMediumContrast = Color(0xFF171C1E)
val surfaceContainerDarkMediumContrast = Color(0xFF1B2023)
val surfaceContainerHighDarkMediumContrast = Color(0xFF252B2D)
val surfaceContainerHighestDarkMediumContrast = Color(0xFF303638)

// Dark Theme High Contrast
val primaryDarkHighContrast = Color(0xFFEAFFFE)
val onPrimaryDarkHighContrast = Color(0xFF000000)
val primaryContainerDarkHighContrast = Color(0xFF84D9D8)
val onPrimaryContainerDarkHighContrast = Color(0xFF000000)
val secondaryDarkHighContrast = Color(0xFFF6FBFF)
val onSecondaryDarkHighContrast = Color(0xFF000000)
val secondaryContainerDarkHighContrast = Color(0xFF8DD5F1)
val onSecondaryContainerDarkHighContrast = Color(0xFF000000)
val tertiaryDarkHighContrast = Color(0xFFFFFAF2)
val onTertiaryDarkHighContrast = Color(0xFF000000)
val tertiaryContainerDarkHighContrast = Color(0xFFD9CD75)
val onTertiaryContainerDarkHighContrast = Color(0xFF000000)
val errorDarkHighContrast = Color(0xFFFFF9F9)
val onErrorDarkHighContrast = Color(0xFF000000)
val errorContainerDarkHighContrast = Color(0xFFFFBAB1)
val onErrorContainerDarkHighContrast = Color(0xFF000000)
val backgroundDarkHighContrast = Color(0xFF0E1514)
val onBackgroundDarkHighContrast = Color(0xFFDDE4E3)
val surfaceDarkHighContrast = Color(0xFF0F1416)
val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkHighContrast = Color(0xFF40484B)
val onSurfaceVariantDarkHighContrast = Color(0xFFF5FCFF)
val outlineDarkHighContrast = Color(0xFFC4CCD0)
val outlineVariantDarkHighContrast = Color(0xFFC4CCD0)
val scrimDarkHighContrast = Color(0xFF000000)
val inverseSurfaceDarkHighContrast = Color(0xFFDEE3E6)
val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
val inversePrimaryDarkHighContrast = Color(0xFF003030)
val surfaceDimDarkHighContrast = Color(0xFF0F1416)
val surfaceBrightDarkHighContrast = Color(0xFF343A3C)
val surfaceContainerLowestDarkHighContrast = Color(0xFF0A0F11)
val surfaceContainerLowDarkHighContrast = Color(0xFF171C1E)
val surfaceContainerDarkHighContrast = Color(0xFF1B2023)
val surfaceContainerHighDarkHighContrast = Color(0xFF252B2D)
val surfaceContainerHighestDarkHighContrast = Color(0xFF303638)
